name: Docker Container Metrics

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: bsamartins/docker-container-metrics

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Prepare
      run: |
        rustup target add aarch64-unknown-linux-gnu x86_64-unknown-linux-gnu
        cargo install cross      

    - name: Build linux-amd64
      run: cross build --release --target x86_64-unknown-linux-gnu

    - name: Build linux-arm64
      run: cross build --release --target aarch64-unknown-linux-gnu

    - name: list files
      run: find .

    - name: upload linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: binaries-linux
        path: |
          target/x86_64-unknown-linux-gnu/release/docker-container-metrics
          target/aarch64-unknown-linux-gnu/release/docker-container-metrics
        if-no-files-found: error

  publish-docker:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Docker.linux.dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}